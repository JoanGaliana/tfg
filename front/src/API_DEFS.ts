/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/login": {
    post: operations["loginByPassword"];
  };
  "/groups": {
    post: operations["createNewGroup"];
  };
  "/users/{id}/groups": {
    get: operations["getUserGroups"];
  };
  "/users/current": {
    get: operations["getCurrentUser"];
  };
  "/groups/{id}": {
    get: operations["getGroupById"];
  };
}

export interface components {
  schemas: {
    ApiError: {
      error?: string;
      timestamp?: string;
      details?: string;
    };
    LoginData: {
      email?: string;
      password?: string;
    };
    CreateGroupData: {
      name?: string;
    };
    Group: {
      /** Format: int64 */
      id?: number;
      name?: string;
      users?: components["schemas"]["User"][];
    };
    User: {
      /** Format: int64 */
      id?: number;
      email?: string;
      username?: string;
    };
  };
}

export interface operations {
  loginByPassword: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": string;
        };
      };
      /** Unauthorized */
      401: {
        content: {
          "*/*": components["schemas"]["ApiError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginData"];
      };
    };
  };
  createNewGroup: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": number;
        };
      };
      /** Unauthorized */
      401: {
        content: {
          "*/*": components["schemas"]["ApiError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateGroupData"];
      };
    };
  };
  getUserGroups: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["Group"][];
        };
      };
      /** Unauthorized */
      401: {
        content: {
          "*/*": components["schemas"]["ApiError"];
        };
      };
    };
  };
  getCurrentUser: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["User"];
        };
      };
      /** Unauthorized */
      401: {
        content: {
          "*/*": components["schemas"]["ApiError"];
        };
      };
    };
  };
  getGroupById: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["Group"];
        };
      };
      /** Unauthorized */
      401: {
        content: {
          "*/*": components["schemas"]["ApiError"];
        };
      };
    };
  };
}

export interface external {}
