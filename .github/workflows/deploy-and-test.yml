name: Deploy and test workflow

on:
  workflow_call:
    inputs:
      ENV_NAME:
        required: true
        type: string
      BASE_URL:
        required: true
        type: string
      API_URL:
        required: true
        type: string
      FRONTEND_IMAGE_NAME:
        required: true
        type: string
      BACKEND_IMAGE_NAME:
        required: true
        type: string
    secrets:
      SSH_HOST:
        required: false
      SSH_USERNAME:
        required: false
      SSH_PASSWORD:
        required: false
      SSH_DEPLOY_CMD:
        required: false
      CYPRESS_RECORD_KEY:
        required: true

jobs:
  deploy-and-test:
    runs-on: ubuntu-latest
    environment: 
      name: ${{inputs.ENV_NAME}}
      url: ${{ inputs.BASE_URL }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx

      - name: Build and push frontend image
        uses: docker/build-push-action@v2
        with:
          context: ./front
          push: true
          tags: ${{ inputs.FRONTEND_IMAGE_NAME }}
          cache-from: type=gha,scope=front
          cache-to: type=gha,mode=max,scope=front
      
      - name: Build and push backend image
        uses: docker/build-push-action@v2
        with:
          context: ./back
          push: true
          tags: ${{ inputs.BACKEND_IMAGE_NAME }}
          cache-from: type=gha,scope=back
          cache-to: type=gha,mode=max,scope=back
      
      - name:  Deploy to ${{inputs.ENV_NAME}}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: ${{ secrets.SSH_DEPLOY_CMD }}

      - name: Run e2e tests on ${{inputs.ENV_NAME}}
        uses: cypress-io/github-action@v4
        with:
          working-directory: e2e
          env: backendURL=${{ inputs.API_URL }}
          config: baseUrl=${{ inputs.BASE_URL }},retries=2,video=false
          wait-on: '${{ inputs.API_URL }}/actuator/health'
          wait-on-timeout: 90
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}                    
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
      
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots